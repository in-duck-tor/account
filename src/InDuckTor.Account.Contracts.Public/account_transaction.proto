syntax = "proto3";

option csharp_namespace = "InDuckTor.Account.Contracts.Public";

package account;
import "google/protobuf/timestamp.proto";
import "shared/decimal.proto";
import "shared/enum_options.proto";


message TransactionEnvelop {
  google.protobuf.Timestamp created_at = 1;
  string correlation_id = 2;
  oneof payload {
    TransactionStarted transaction_started = 3;
    TransactionFinished transaction_finished = 4;
  }
}

message TransactionStarted {
  int64 id = 1;
  TransactionType type = 2;
  TransactionStatus status = 3;
  int32 initiated_by_id = 4;

  message Target {
    int64 bank_code = 1;
    // Трёхбуквенный алфавитный код ISO 4217
    string currency_code = 2;
    string account_number = 3;
    // Объём денежных средств
    // todo возможно стоит попробовать другой формат  
    // string amount = 4;
    // int64 amount = ;   OACurrency
    // double amount = ;  
    // bytes amount = ;   бинарная сериализация decimal
    shared.DecimalValue amount = 4;
  }

  optional Target DepositOn = 5;
  optional Target WithdrawFrom = 6;
}

enum TransactionType {
  TRANSACTION_TYPE_UNKNOWN = 0;
  TRANSACTION_TYPE_WITHDRAW = 1               [(shared.enum_member).value = "withdraw"];
  TRANSACTION_TYPE_DEPOSIT = 2                [(shared.enum_member).value = "deposit"];
  TRANSACTION_TYPE_TRANSFER = 3               [(shared.enum_member).value = "transfer"];
  TRANSACTION_TYPE_TRANSFER_TO_EXTERNAL = 4   [(shared.enum_member).value = "transfer_to_external"];
  TRANSACTION_TYPE_TRANSFER_FROM_EXTERNAL = 5 [(shared.enum_member).value = "transfer_from_external"];

}

enum TransactionStatus {
  // неизвестен \ ошибка 
  TRANSACTION_STATUS_UNKNOWN = 0;
  TRANSACTION_STATUS_CREATING = 1   [(shared.enum_member).value = "creating"];
  TRANSACTION_STATUS_PENDING = 2    [(shared.enum_member).value = "pending"];
  TRANSACTION_STATUS_COMMITTED = 3  [(shared.enum_member).value = "committed"];
  TRANSACTION_STATUS_CANCELED = 4   [(shared.enum_member).value = "canceled"];
}

message TransactionFinished {
  int64 id = 1;
  TransactionType type = 2;
  // Завершенный статус трансакции
  TransactionStatus status = 3;
}